// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ari-data.proto

#include "ari-data.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ari {
PROTOBUF_CONSTEXPR AriData_Ari::AriData_Ari(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hobby_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.age_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AriData_AriDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AriData_AriDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AriData_AriDefaultTypeInternal() {}
  union {
    AriData_Ari _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AriData_AriDefaultTypeInternal _AriData_Ari_default_instance_;
PROTOBUF_CONSTEXPR AriData::AriData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ari_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AriDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AriDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AriDataDefaultTypeInternal() {}
  union {
    AriData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AriDataDefaultTypeInternal _AriData_default_instance_;
}  // namespace ari
static ::_pb::Metadata file_level_metadata_ari_2ddata_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_ari_2ddata_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ari_2ddata_2eproto = nullptr;

const uint32_t TableStruct_ari_2ddata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ari::AriData_Ari, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ari::AriData_Ari, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ari::AriData_Ari, _impl_.age_),
  PROTOBUF_FIELD_OFFSET(::ari::AriData_Ari, _impl_.hobby_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ari::AriData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ari::AriData, _impl_.ari_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ari::AriData_Ari)},
  { 9, -1, -1, sizeof(::ari::AriData)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ari::_AriData_Ari_default_instance_._instance,
  &::ari::_AriData_default_instance_._instance,
};

const char descriptor_table_protodef_ari_2ddata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016ari-data.proto\022\003ari\"Y\n\007AriData\022\035\n\003ari\030"
  "\001 \003(\0132\020.ari.AriData.Ari\032/\n\003Ari\022\014\n\004name\030\001"
  " \001(\t\022\013\n\003age\030\002 \001(\005\022\r\n\005hobby\030\003 \003(\tb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_ari_2ddata_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ari_2ddata_2eproto = {
    false, false, 120, descriptor_table_protodef_ari_2ddata_2eproto,
    "ari-data.proto",
    &descriptor_table_ari_2ddata_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_ari_2ddata_2eproto::offsets,
    file_level_metadata_ari_2ddata_2eproto, file_level_enum_descriptors_ari_2ddata_2eproto,
    file_level_service_descriptors_ari_2ddata_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ari_2ddata_2eproto_getter() {
  return &descriptor_table_ari_2ddata_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ari_2ddata_2eproto(&descriptor_table_ari_2ddata_2eproto);
namespace ari {

// ===================================================================

class AriData_Ari::_Internal {
 public:
};

AriData_Ari::AriData_Ari(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ari.AriData.Ari)
}
AriData_Ari::AriData_Ari(const AriData_Ari& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AriData_Ari* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hobby_){from._impl_.hobby_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.age_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.age_ = from._impl_.age_;
  // @@protoc_insertion_point(copy_constructor:ari.AriData.Ari)
}

inline void AriData_Ari::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.hobby_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.age_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AriData_Ari::~AriData_Ari() {
  // @@protoc_insertion_point(destructor:ari.AriData.Ari)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AriData_Ari::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hobby_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}

void AriData_Ari::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AriData_Ari::Clear() {
// @@protoc_insertion_point(message_clear_start:ari.AriData.Ari)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hobby_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.age_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AriData_Ari::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ari.AriData.Ari.name"));
        } else
          goto handle_unusual;
        continue;
      // int32 age = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.age_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string hobby = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_hobby();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ari.AriData.Ari.hobby"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AriData_Ari::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ari.AriData.Ari)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ari.AriData.Ari.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int32 age = 2;
  if (this->_internal_age() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_age(), target);
  }

  // repeated string hobby = 3;
  for (int i = 0, n = this->_internal_hobby_size(); i < n; i++) {
    const auto& s = this->_internal_hobby(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ari.AriData.Ari.hobby");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ari.AriData.Ari)
  return target;
}

size_t AriData_Ari::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ari.AriData.Ari)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string hobby = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.hobby_.size());
  for (int i = 0, n = _impl_.hobby_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.hobby_.Get(i));
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 age = 2;
  if (this->_internal_age() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_age());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AriData_Ari::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AriData_Ari::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AriData_Ari::GetClassData() const { return &_class_data_; }


void AriData_Ari::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AriData_Ari*>(&to_msg);
  auto& from = static_cast<const AriData_Ari&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ari.AriData.Ari)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.hobby_.MergeFrom(from._impl_.hobby_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_age() != 0) {
    _this->_internal_set_age(from._internal_age());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AriData_Ari::CopyFrom(const AriData_Ari& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ari.AriData.Ari)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AriData_Ari::IsInitialized() const {
  return true;
}

void AriData_Ari::InternalSwap(AriData_Ari* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hobby_.InternalSwap(&other->_impl_.hobby_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.age_, other->_impl_.age_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AriData_Ari::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ari_2ddata_2eproto_getter, &descriptor_table_ari_2ddata_2eproto_once,
      file_level_metadata_ari_2ddata_2eproto[0]);
}

// ===================================================================

class AriData::_Internal {
 public:
};

AriData::AriData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ari.AriData)
}
AriData::AriData(const AriData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AriData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ari_){from._impl_.ari_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ari.AriData)
}

inline void AriData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ari_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AriData::~AriData() {
  // @@protoc_insertion_point(destructor:ari.AriData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AriData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ari_.~RepeatedPtrField();
}

void AriData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AriData::Clear() {
// @@protoc_insertion_point(message_clear_start:ari.AriData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ari_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AriData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ari.AriData.Ari ari = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ari(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AriData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ari.AriData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ari.AriData.Ari ari = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ari_size()); i < n; i++) {
    const auto& repfield = this->_internal_ari(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ari.AriData)
  return target;
}

size_t AriData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ari.AriData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ari.AriData.Ari ari = 1;
  total_size += 1UL * this->_internal_ari_size();
  for (const auto& msg : this->_impl_.ari_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AriData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AriData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AriData::GetClassData() const { return &_class_data_; }


void AriData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AriData*>(&to_msg);
  auto& from = static_cast<const AriData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ari.AriData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ari_.MergeFrom(from._impl_.ari_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AriData::CopyFrom(const AriData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ari.AriData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AriData::IsInitialized() const {
  return true;
}

void AriData::InternalSwap(AriData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ari_.InternalSwap(&other->_impl_.ari_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AriData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ari_2ddata_2eproto_getter, &descriptor_table_ari_2ddata_2eproto_once,
      file_level_metadata_ari_2ddata_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ari
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ari::AriData_Ari*
Arena::CreateMaybeMessage< ::ari::AriData_Ari >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ari::AriData_Ari >(arena);
}
template<> PROTOBUF_NOINLINE ::ari::AriData*
Arena::CreateMaybeMessage< ::ari::AriData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ari::AriData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
